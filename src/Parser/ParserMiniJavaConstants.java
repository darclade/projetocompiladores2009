/* Generated By:JavaCC: Do not edit this line. ParserMiniJavaConstants.java */
package Parser;


/** 
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserMiniJavaConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int LETRA = 1;
  /** RegularExpression Id. */
  int DIGITO = 2;
  /** RegularExpression Id. */
  int MAINCLASS = 3;
  /** RegularExpression Id. */
  int CLASS = 4;
  /** RegularExpression Id. */
  int PUBLIC = 5;
  /** RegularExpression Id. */
  int STATIC = 6;
  /** RegularExpression Id. */
  int VOID = 7;
  /** RegularExpression Id. */
  int MAIN = 8;
  /** RegularExpression Id. */
  int EXTENDS = 9;
  /** RegularExpression Id. */
  int RETURN = 10;
  /** RegularExpression Id. */
  int STRING = 11;
  /** RegularExpression Id. */
  int INT = 12;
  /** RegularExpression Id. */
  int INT_VETOR = 13;
  /** RegularExpression Id. */
  int BOOLEAN = 14;
  /** RegularExpression Id. */
  int IF = 15;
  /** RegularExpression Id. */
  int ELSE = 16;
  /** RegularExpression Id. */
  int WHILE = 17;
  /** RegularExpression Id. */
  int PRINT_LINE = 18;
  /** RegularExpression Id. */
  int LENGTH = 19;
  /** RegularExpression Id. */
  int RECEBE = 20;
  /** RegularExpression Id. */
  int MENOR = 21;
  /** RegularExpression Id. */
  int MAIOR = 22;
  /** RegularExpression Id. */
  int NEGADO = 23;
  /** RegularExpression Id. */
  int IGUAL = 24;
  /** RegularExpression Id. */
  int E = 25;
  /** RegularExpression Id. */
  int OU = 26;
  /** RegularExpression Id. */
  int MAIS = 27;
  /** RegularExpression Id. */
  int MENOS = 28;
  /** RegularExpression Id. */
  int ESTRELA = 29;
  /** RegularExpression Id. */
  int BARRA = 30;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 31;
  /** RegularExpression Id. */
  int TRUE = 32;
  /** RegularExpression Id. */
  int FALSE = 33;
  /** RegularExpression Id. */
  int NEW = 34;
  /** RegularExpression Id. */
  int THIS = 35;
  /** RegularExpression Id. */
  int LPAREN = 36;
  /** RegularExpression Id. */
  int RPAREN = 37;
  /** RegularExpression Id. */
  int LBRACE = 38;
  /** RegularExpression Id. */
  int RBRACE = 39;
  /** RegularExpression Id. */
  int LBRACKET = 40;
  /** RegularExpression Id. */
  int RBRACKET = 41;
  /** RegularExpression Id. */
  int PONTOVIRGULA = 42;
  /** RegularExpression Id. */
  int VIRGULA = 43;
  /** RegularExpression Id. */
  int PONTO = 44;
  /** RegularExpression Id. */
  int ID = 45;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<LETRA>",
    "<DIGITO>",
    "\"MainClass\"",
    "\"class\"",
    "\"public\"",
    "\"static\"",
    "\"void\"",
    "\"main\"",
    "\"extends\"",
    "\"return\"",
    "\"String\"",
    "\"int\"",
    "<INT_VETOR>",
    "\"boolean\"",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"System.out.println\"",
    "\"length\"",
    "\"=\"",
    "\"<\"",
    "\">\"",
    "\"!\"",
    "\"==\"",
    "\"&&\"",
    "\"||\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "<INTEGER_LITERAL>",
    "\"true\"",
    "\"false\"",
    "\"new\"",
    "\"this\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\",\"",
    "\".\"",
    "<ID>",
    "<token of kind 46>",
    "\" \"",
    "\"\\n\"",
    "\"\\t\"",
    "\"\\r\"",
  };

}
